{
  "name": "stacks",
  "type": "module",
  "version": "0.37.9",
  "packageManager": "pnpm@7.14.0",
  "description": "The Stacks framework.",
  "author": "Chris Breuer",
  "license": "MIT",
  "funding": "https://github.com/sponsors/chrisbbreuer",
  "homepage": "https://github.com/stacksjs/stacks/tree/main/.stacks#readme",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/stacksjs/stacks.git",
    "directory": "./.stacks"
  },
  "bugs": {
    "url": "https://github.com/stacksjs/stacks/issues"
  },
  "keywords": [
    "vite",
    "component",
    "composables",
    "functions",
    "api",
    "ssg",
    "pwa",
    "modern",
    "library",
    "vue",
    "web components",
    "typescript",
    "javascript",
    "starter kit"
  ],
  "main": "dist/index.mjs",
  "module": "dist/index.mjs",
  "types": "dist/index.d.ts",
  "contributors": [
    "Chris Breuer <chris@ow3.org>"
  ],
  "bin": {
    "stacks": "bin/stacks.mjs",
    "stx": "bin/stacks.mjs",
    "artisan": "bin/stacks.mjs"
  },
  "files": [
    "dist",
    "README.md"
  ],
  "engines": {
    "node": ">=v18.11.0",
    "pnpm": ">=7.14.0"
  },
  "scripts": {
    "preinstall": "npx only-allow pnpm",
    "prepublishOnly": "pnpm run build:stacks",
    "stacks": "esno ./src/cli.ts",
    "stx": "pnpm run stacks",
    "artisan": "pnpm run stacks",
    "fresh": "pnpm run clean && pnpm i",
    "clean": "rimraf ../pnpm-lock.yaml ../node_modules/ ../**/node_modules",
    "update": "pnpm stacks update",
    "update:dependencies": "pnpm stacks update:dependencies",
    "update:framework": "pnpm stacks update:framework",
    "update:package-manager": "pnpm stacks update:package-manager",
    "dev": "pnpm stacks dev",
    "dev:components": "vite serve ./vue-components -c ./core/build/src/vue-components.ts",
    "dev:docs": "vitepress dev ../apps/site",
    "dev:pages": "nitro dev",
    "dev:functions": "pnpm stacks dev:functions // todo: opens the auto-generated web server of functions",
    "development": "pnpm run dev",
    "build": "pnpm stacks build // todo: add the help default",
    "build:components": "pnpm stacks build:components",
    "build:vue-components": "vite build -c ./core/build/src/vue-components.ts",
    "build:web-components": "vite build -c ./core/build/src/web-components.ts",
    "build:functions": "vite build -c ./core/build/src/functions.ts",
    "build:docs": "vitepress build ../apps/site",
    "build:pages": "vite-ssg build ./pages -c ./core/build/src/pages.ts",
    "build:cli": "unbuild",
    "build:core": "pnpm --filter './core/**' build",
    "build:stacks": "mkdist -d && unbuild",
    "build:all": "wip",
    "prod": "pnpm run build",
    "prod:components": "pnpm run build:components",
    "prod:vue-components": "pnpm run build:web-components",
    "prod:web-components": "pnpm run build:web-components",
    "prod:functions": "pnpm run build:functions",
    "prod:docs": "pnpm run build:docs",
    "prod:pages": "pnpm run build:pages",
    "prod:stacks": "pnpm run build:stacks",
    "prod:all": "pnpm run build:all",
    "deploy": "pnpm stacks deploy",
    "deploy:functions": "pnpm stacks deploy:functions",
    "deploy:pages": "pnpm stacks deploy:functions",
    "deploy:docs": "pnpm stacks deploy:docs",
    "deploy:all": "pnpm stacks deploy:all",
    "example": "wip",
    "example:vue": "pnpm run build:components && cd examples/vue-components && ln -sf ../../vue-components/dist dist && vite serve -c ../../core/build/example-vue.ts",
    "example:web-components": "pnpm run build:web-components && cd examples/web-components && ln -sf ../../web-components/dist dist && vite serve -c ../../core/build/example-wc.ts",
    "lint": "eslint ..",
    "lint:fix": "eslint .. --fix",
    "serve": "pnpm stacks serve",
    "serve:pages": "pnpm run dev:pages",
    "serve:functions": "pnpm run dev:functions",
    "make": "pnpm stacks make",
    "make:component": "pnpm stacks make:component",
    "make:function": "pnpm stacks make:function",
    "make:database": "pnpm stacks make:migration",
    "make:migration": "pnpm stacks make:migration",
    "make:factory": "pnpm stacks make:factory",
    "make:lang": "pnpm stacks make:lang",
    "make:stack": "pnpm stacks make:stack",
    "key": "pnpm stacks key",
    "key:generate": "pnpm stacks key:generate",
    "commit": "git cz",
    "release": "esno ./core/actions/src/generate-package-json.ts && pnpm lint:fix && bumpp ./package.json ./core/**/package.json --execute 'pnpm run changelog' --all",
    "changelog": "cd .. && conventional-changelog -p angular -i CHANGELOG.md -s -r 0",
    "generate": "pnpm stacks generate",
    "generate:entries": "esno ./core/actions/src/generate-lib-entries.ts",
    "generate:vue-compat": "esno ./core/actions/src/generate-vue-compat.ts",
    "generate:vscode-custom-data": "esno ./core/actions/src/generate-vscode-custom-data.ts",
    "generate:web-types": "vue-docgen-web-types -c ./core/build/web-types.config.cjs",
    "generate:component-meta": "esno ./core/actions/src/component-meta.ts",
    "generate:ide-helpers": "esno ./core/actions/src/generate-ide-helpers.ts",
    "generate:all": "pnpm stacks generate:all",
    "types:generate": "vue-tsc --declaration --emitDeclarationOnly && esno ./core/actions/src/copy-types.ts",
    "types:fix": "esno actions/src/fix-types.ts",
    "test": "vitest --config vitest.config.ts",
    "test:unit": "wip",
    "test:e2e": "wip",
    "test:coverage": "vitest run --coverage --config vitest.config.ts",
    "test:types": "vue-tsc --noEmit"
  },
  "dependencies": {
    "@stacksjs/actions": "workspace:*",
    "@stacksjs/arrays": "workspace:*",
    "@stacksjs/build": "workspace:*",
    "@stacksjs/cli": "workspace:*",
    "@stacksjs/collections": "workspace:*",
    "@stacksjs/config": "workspace:*",
    "@stacksjs/docs": "workspace:*",
    "@stacksjs/fs": "workspace:*",
    "@stacksjs/git": "workspace:*",
    "@stacksjs/lint": "workspace:*",
    "@stacksjs/modules": "workspace:*",
    "@stacksjs/objects": "workspace:*",
    "@stacksjs/path": "workspace:*",
    "@stacksjs/router": "workspace:*",
    "@stacksjs/security": "workspace:*",
    "@stacksjs/strings": "workspace:*",
    "@stacksjs/tests": "workspace:*",
    "@stacksjs/types": "workspace:*",
    "@stacksjs/ui": "workspace:*",
    "@stacksjs/utils": "workspace:*"
  },
  "devDependencies": {
    "typescript": "^4.8.4"
  },
  "config": {
    "commitizen": {
      "path": "node_modules/cz-git"
    }
  },
  "web-types": "./web-types.json"
}
