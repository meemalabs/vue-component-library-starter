#!/bin/sh

## To learn more, visit https://stacksjs.org/docs/guide/bootstrap

# Function to check if a command exists
command_exists() {
  command -v "$1" >/dev/null 2>&1
}

# Check for required commands
for cmd in git mkfifo; do
  if ! command_exists "$cmd"; then
    echo "Error: '$cmd' is required but not installed. Please install $cmd and try again."
    exit 1
  fi
done

# Check if the directory exists
if [ -d "storage/framework/core" ]; then
  :
else
  if [ -z "$1" ]; then
    project="stacks"
  else
    project="$1"
  fi

  if [ "$project" = "stacks" ] && [ -d "storage/framework/core" ]; then
    :
  elif [ -d "$project" ]; then
    echo "Project $project exists locally. Please use a different name & run again."
    exit 1
  else
    git clone https://github.com/stacksjs/stacks.git "$project"
    cd "$project" || exit 1

    # Save current project directory path
    projectDir=$(pwd)

    if ! command_exists "./storage/framework/scripts/pkgx-install"; then
      echo "Error: pkgx-install script not found in './storage/framework/scripts/pkgx-install'. Please check your installation and try again."
      exit 1
    fi
    "./storage/framework/scripts/pkgx-install"

    echo "Installing project dependencies via bun..."
    pkgx bun install

    echo "Building project core packages..."
    cd "./storage/framework/core" && pkgx bun run build

    echo "Project $project has been created in ${projectDir}. Run 'bun run dev' to start the server."

    exit 1
  fi
fi

# Get the directory of the current script and go up 3 directories
PROJECT_ROOT="$(cd "$(dirname "$0")" && pwd)"
CORE_PATH="$PROJECT_ROOT/storage/framework/core"
CLI_PATH="$CORE_PATH/buddy/src/cli.ts"
SCRIPT_PATH="$PROJECT_ROOT/storage/framework/scripts/pkgx-install"
LOG_PATH="$PROJECT_ROOT/storage/logs/console.log"

case "$*" in
  *--verbose*)
    echo "Project root: $PROJECT_ROOT"
    echo "CLI path: $CLI_PATH"
    echo "Script path: $SCRIPT_PATH"
    echo "Log path: $LOG_PATH"
    ;;
  *)
esac

cd "$PROJECT_ROOT" || exit 1
# Run the pkgx-install script
case "$*" in
  *--verbose*)
    if [ ! -f "$SCRIPT_PATH" ]; then
      echo "Error: Script path $SCRIPT_PATH does not exist."
      exit 1
    fi
    "$SCRIPT_PATH"
    ;;
  *)
    if [ ! -f "$SCRIPT_PATH" ]; then
      echo "Error: Script path $SCRIPT_PATH does not exist."
      exit 1
    fi
    "$SCRIPT_PATH" > /dev/null 2>&1
    ;;
esac

# Create a named pipe
mkfifo /tmp/pipe

# Bun is assumed to be installed after it's initial set up
# Run the command, send output to both the console and the pipe
if ! command_exists bun; then
  # We'll use pgkx with bun to get
  pkgx bun --bun "$CLI_PATH" setup | tee /tmp/pipe &
  exit 1
else
  bun --bun "$CLI_PATH" setup | tee /tmp/pipe &
fi


# Read from the pipe, add timestamps, and append to the file
while IFS= read -r line; do echo "$(date '+[%Y-%m-%d %H:%M:%S]') $line"; done < /tmp/pipe >> "$LOG_PATH"

# Remove the named pipe
rm /tmp/pipe