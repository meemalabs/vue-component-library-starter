{
  // TODO: temp until biome can handle SFCs
  "eslint.experimental.useFlatConfig": true,
    // Silent the stylistic rules in you IDE, but still auto fix them
  "eslint.rules.customizations": [
    { "rule": "style/*", "severity": "off" },
    { "rule": "format/*", "severity": "off" },
    { "rule": "*-indent", "severity": "off" },
    { "rule": "*-spacing", "severity": "off" },
    { "rule": "*-spaces", "severity": "off" },
    { "rule": "*-order", "severity": "off" },
    { "rule": "*-dangle", "severity": "off" },
    { "rule": "*-newline", "severity": "off" },
    { "rule": "*quotes", "severity": "off" },
    { "rule": "*semi", "severity": "off" },
    { "rule": "no-undef", "severity": "off" }
  ],

  // Enable eslint for all supported languages
  "eslint.validate": [
    "vue"
  ],

  // JavaScript
  "prettier.enable": false,   // Disable the default formatter, use eslint instead
  "editor.defaultFormatter": "biomejs.biome",
  "editor.formatOnSave": false,
  "editor.codeActionsOnSave": {
    "quickfix.biome": "explicit",
    "source.fixAll.eslint": "explicit",
    "source.organizeImports.biome": "explicit"
  },

  // TypeScript
  "typescript.tsdk": "${workspaceFolder}/node_modules/typescript/lib",
  "unocss.root": "${workspaceFolder}/storage/framework/core/ui/src/uno.config.ts",

  // JSON
  "[jsonc]": {
    "editor.defaultFormatter": "biomejs.biome"
  },

  // YAML
  "[yaml]": {
    "editor.defaultFormatter": "biomejs.biome"
  },

  // Shell
  "[shellscript]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },

  // Markdown
  "[markdown]": {
    "editor.defaultFormatter": "DavidAnson.vscode-markdownlint",
    "editor.formatOnSave": true
  },
  "markdownlint.config": {
    "default": true,
    "MD033": {
      "allowed_elements": [
        "details",
        "summary",
        "VPTeamPage",
        "VPTeamPageTitle",
        "VPTeamMembers",
        "script"
      ]
    },
    "MD041": false
  },

  // Stacks
  "vue.inlayHints.missingProps": true,
  "typescript.preferGoToSourceDefinition": true,
  "[stx]": {
    "editor.defaultFormatter": "biomejs.biome"
  },
  "files.associations": {
    "buddy": "typescript",
    "*.stx": "vue"
  },
  "editor.quickSuggestions": {
    "strings": true
  },
  "vsicons.associations.files": [
    {
      "icon": "${workspaceFolder}/public/favicon.svg",
      "extensions": ["stx"],
      "format": "svg"
    }
  ],
  "git.enableSmartCommit": true,
  "npm.enableRunFromFolder": true,
  "npm.packageManager": "bun",
  "editor.gotoLocation.multipleDefinitions": "goto",
  "search.exclude": {
    "**/node_modules": true,
    "**/cdk.out": true,
    "**/dist": true,
    "**/storage/public": true,
    "CHANGELOG.md": true
  },
  "explorer.confirmDragAndDrop": false,
  "todo-tree.highlights.enabled": true,
  "cSpell.ignorePaths": [
    "node_modules",
    "lang/de.yml"
  ],
  "cSpell.dictionaries": [
    "stacks-dictionary"
  ],
  "cSpell.diagnosticLevel": "Hint",
  "cSpell.customDictionaries": {
    "stacks": {
      "name": "stacks-dictionary",
      "path": "./storage/framework/ide/dictionary.txt",
      "scope": "user",
      "addWords": true
    },
    "custom": true // enable the `custom` dictionary
  },
  "terminal.integrated.scrollback": 10000,
  "grammarly.files.include": [
    "**/README.md",
    "**/readme.md",
    "**/*.txt"
  ],
  "grammarly.files.exclude": [
    "**/dictionary.txt"
  ],
}
